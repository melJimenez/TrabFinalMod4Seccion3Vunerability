package testCase;

import io.qameta.allure.*;
import org.json.JSONObject;
import org.junit.jupiter.api.AfterEach;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Order;
import org.junit.jupiter.api.Test;
import util.Request;
import util.ResponseInformation;


import static util.ApiOwaspConfig.*;
import static util.EnvConfig.HOST;

public class VulnerabilityTest {
    Request request= new Request();
    ResponseInformation responseInformation = new ResponseInformation();
    String idScanner;
    @Step("Config the Host and Start Scanning")
    public void startScanningInZAP(){
        responseInformation = request.sendGetRequest(String.format(START_SCANNING,HOST));
        JSONObject response= new JSONObject(responseInformation.getBody());
        // id scan
        idScanner= response.getString("scan").toString();
    }

    @Order(2)
    @DisplayName("Verify the scanner of OWASP ZAP Vulnerability Section")
    @Description("This is the test case for teh third section of the final Mod 4 project")
    @Epic("1- Login TodoistApp")
    @Feature("Login")
    @Owner("Melissa")
    @Link("jira/FINAL-3")
    @Issue("BUG 323")
    @Test
    public void vulnerabilityOwaspZapTest() throws InterruptedException {
        this.startScanningInZAP();
        this.monitoringTheProgressScanner();
    }


    @Step("Monitoring process percentage")
    public void monitoringTheProgressScanner() throws InterruptedException {
        // get the status
        String status="0";
        do {
            responseInformation = request.sendGetRequest(String.format(PROGRESS,idScanner));
            JSONObject response= new JSONObject(responseInformation.getBody());
            status= response.get("status").toString();
            System.out.println("INFO> status: ["+status+"%]");
            Thread.sleep(10000);
        } while(!status.equals("100"));
    }

    @AfterEach
    public void after(){
        //get vulnerability test
        responseInformation =request.sendGetRequest(String.format(GET_LIST_VULNERABILITY,idScanner));
        this.attachment("Vulnerability List", responseInformation.getBody());
        // get report
        responseInformation =request.sendGetRequest(GET_REPORT);
        this.attachment("OWASP ZAP Report", responseInformation.getBody());
    }

    @Attachment(value = "{0}", type = "text/html")
    public String attachment(String name,String content){
        return content;
    }

}